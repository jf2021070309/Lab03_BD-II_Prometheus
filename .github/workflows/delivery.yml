name: Delivery Workflow

on:
  workflow_dispatch: # Permite activar el workflow manualmente

jobs:
  deploy:
    runs-on: ubuntu-latest # Puedes elegir el runner que prefieras

    steps:
    - name: Check out the repository
      uses: actions/checkout@v2

    - name: Pull API image from Docker Hub
      run: |
        # Descargar la imagen de la API desde Docker Hub
        docker pull jf202107309/lab03_bd-ii_prometheus:latest

    - name: Start API container
      run: |
        # Iniciar el contenedor de la API
        docker run -d --name api_dockerhub_clientes -p 5001:8080 \
          -e "ConnectionStrings__ClienteDB=Server=bd_clientes;Database=BD_CLIENTES;User Id=admin_user;Password=UPT.2024;TrustServerCertificate=true" \
          jf202107309/lab03_bd-ii_prometheus:latest

    - name: Start Prometheus container
      run: |
        # Iniciar el contenedor de Prometheus
        docker run -d --name prometheus_container -p 9090:9090 \
          prom/prometheus \
          --config.file=/etc/prometheus/prometheus.yml \
          --storage.tsdb.path=/prometheus

    - name: Check if API container is running
      run: |
        echo "Checking if API container is running..."
        docker ps

    - name: Get Prometheus logs
      run: |
        echo "Getting logs from Prometheus container..."
        docker logs prometheus_container || echo "Prometheus container not running"

    - name: Wait for Prometheus to be ready
      run: |
        # Esperar a que Prometheus esté disponible
        echo "Waiting for Prometheus to be available..."
        until $(curl --output /dev/null --silent --head --fail http://localhost:9090/); do
            printf '.'
            sleep 5
        done
        echo "Prometheus is up and running."

    - name: Get metrics from Prometheus
      run: |
        # Realizar una petición GET a Prometheus para obtener una métrica específica
        METRIC_NAME="healthcheck_status"
        RESPONSE=$(curl -s "http://localhost:9090/api/v1/query?query=$METRIC_NAME")
        echo "Response from Prometheus:"
        echo $RESPONSE

    - name: Stop Docker containers
      run: |
        # Detener y eliminar los contenedores después de obtener la métrica
        docker stop api_dockerhub_clientes prometheus_container
        docker rm api_dockerhub_clientes prometheus_container
